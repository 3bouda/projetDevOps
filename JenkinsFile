pipeline {
    agent any
    tools{
        nodejs "nodejs"
        dockerTool "docker"
    }
    environment {
        registry = '3oudaaa/devops'
        registryCredential = 'ihebdocker'
        dockerImage = ''

    }

    stages {
        stage('GIT') {
            steps {
                git branch: 'main', url: 'https://github.com/3bouda/projetDevOps.git'
            }
        }

        stage ('Clean Cache') {
            steps {
                echo "Clean";
                sh 'npm cache clean --force';
            }
        }

        stage ('Install') {
            steps {
                echo "Install";
                sh 'npm config set registry https://registry.npmjs.org/ '
                sh 'npm install --legacy-peer-deps';
            }
        }

        stage('Building Image Docker') {
                    steps {
                        script {
                            dockerImage = docker.build registry + ":latest"
                }
            }
        }

        stage('Deploy Image On DockerHub') {
            steps {
                sh 'curl https://download.docker.com/linux/static/stable/x86_64/docker-19.03.8.tgz | tar xvz --directory /tmp && mv -v /tmp/docker/docker /usr/local/bin/docker && chmod +x /usr/local/bin/docker && rm -rf /tmp/docker';
                script {
                    docker.withRegistry( '', registryCredential ) {
                        dockerImage.push('latest')
                    }
                }
            }
        }

        stage('Deploy App on K8S ') {
            steps {
            sshagent(['k8s']) {

                echo "Delete old files";
                    sh "ssh -o StrictHostKeyChecking=no ubuntu@192.168.61.130 rm /home/ubuntu/kubernetes-app/Deployment_app.yaml"
                    sh "ssh -o StrictHostKeyChecking=no ubuntu@192.168.61.130 rm /home/ubuntu/kubernetes-app/Service_app.yaml"
                echo "Add new files";
                    sh "scp -o StrictHostKeyChecking=no ./Kubernetes/Deployment_app.yaml ubuntu@192.168.61.130:/home/ubuntu/kubernetes-app"
                    sh "scp -o StrictHostKeyChecking=no ./Kubernetes/Service_app.yaml ubuntu@192.168.61.130:/home/ubuntu/kubernetes-app"

            script {
                    sh "ssh ubuntu@192.168.61.130 kubectl delete -n iheb deployment node-app-deployment"
                    sh "ssh ubuntu@192.168.61.130 kubectl delete -n iheb service node-app-service"
                    sh "ssh ubuntu@192.168.61.130 kubectl create -f /home/ubuntu/kubernetes-app/Deployment_app.yaml"
                    sh "ssh ubuntu@192.168.61.130 kubectl create -f /home/ubuntu/kubernetes-app/Service_app.yaml"
                    }
                }
            }
        }
    }
}
